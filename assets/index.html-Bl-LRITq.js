import{_ as c,c as o,e as i,b as r,w as e,r as d,o as m,a as s,d as a}from"./app-D9fezM6y.js";const u={};function h(g,n){const p=d("Tabs");return m(),o("div",null,[n[4]||(n[4]=i(`<h2 id="cmd" tabindex="-1"><a class="header-anchor" href="#cmd"><span>cmd</span></a></h2><p>可以直接执行 <code>.bat</code> 文件</p><div class="language-cmd line-numbers-mode" data-highlighter="prismjs" data-ext="cmd"><pre><code class="language-cmd"><span class="line">rd /s /q node_modules</span>
<span class="line">del /f /q package-lock.json</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><h2 id="nvm-windows" tabindex="-1"><a class="header-anchor" href="#nvm-windows"><span>NVM-windows</span></a></h2><p>管理 node.js 版本</p><p><a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="noopener noreferrer">GitHub 地址</a></p>`,6)),r(p,{id:"16",data:[{id:"配置镜像"},{id:"常用命令"}]},{title0:e(({value:t,isActive:l})=>n[0]||(n[0]=[a("配置镜像",-1)])),title1:e(({value:t,isActive:l})=>n[1]||(n[1]=[a("常用命令",-1)])),tab0:e(({value:t,isActive:l})=>n[2]||(n[2]=[s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh"},[s("pre",null,[s("code",{class:"language-bash"},[s("span",{class:"line"},"nvm node_mirror https://npmmirror.com/mirrors/node/"),a(`
`),s("span",{class:"line"},"nvm npm_mirror https://npmmirror.com/mirrors/npm/"),a(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}})],-1)])),tab1:e(({value:t,isActive:l})=>n[3]||(n[3]=[s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh"},[s("pre",null,[s("code",{class:"language-bash"},[s("span",{class:"line"},[a("nvm list "),s("span",{class:"token comment"},"# 查看下载的 node 版本")]),a(`
`),s("span",{class:"line"},[a("nvm use "),s("span",{class:"token comment"},"# 指定当前使用的 node")]),a(`
`),s("span",{class:"line"},[a("nvm "),s("span",{class:"token function"},"install"),a(),s("span",{class:"token operator"},"<"),a("version"),s("span",{class:"token operator"},">")]),a(`
`),s("span",{class:"line"},[a("nvm uninstall "),s("span",{class:"token operator"},"<"),a("version"),s("span",{class:"token operator"},">")]),a(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}})],-1)])),_:1}),n[5]||(n[5]=i(`<h2 id="pnpm" tabindex="-1"><a class="header-anchor" href="#pnpm"><span>pnpm</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">pnpm</span> i <span class="token comment"># 安装某个项目的所有依赖</span></span>
<span class="line"><span class="token function">pnpm</span> run <span class="token string">&quot;/&lt;regex&gt;/&quot;</span> <span class="token comment"># 可以使用正则表达式来替代脚本名称从而同时运行多个脚本</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><h2 id="git" tabindex="-1"><a class="header-anchor" href="#git"><span>git</span></a></h2><p>好使的教程 --&gt; <a href="https://backlog.com/git-tutorial/cn/intro/intro1_1.html" target="_blank" rel="noopener noreferrer">猴子都能懂的 git 入门</a></p><h3 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令"><span>常用命令</span></a></h3><p><code>init</code></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">git</span> init <span class="token comment"># 初始化 git 项目</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><p><code>revert</code></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># 回退一个commit</span></span>
<span class="line"><span class="token function">git</span> revert commit号</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 回退多个连续的commit (后面的，前面的]</span></span>
<span class="line"><span class="token function">git</span> revert 后面的<span class="token punctuation">..</span>.前面的</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><p><code>添加远程仓库并取别名</code></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">git remote add upstream xxxxxx（上游仓库地址）</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><p><code>基于远程分支新建一个分支并切换过去</code></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">git checkout upstream/dev -b xxxx（分支名）</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><p><code>stash</code></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># 暂存现在的内容</span></span>
<span class="line"><span class="token function">git</span> stash <span class="token punctuation">[</span>save <span class="token string">&#39;描述&#39;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token comment"># 查看所有的暂存</span></span>
<span class="line"><span class="token function">git</span> stash list</span>
<span class="line"><span class="token comment"># 清空所有的暂存</span></span>
<span class="line"><span class="token function">git</span> stash <span class="token function">clear</span></span>
<span class="line"><span class="token comment"># 删除某一个暂存，默认删除 stash@{0}</span></span>
<span class="line"><span class="token function">git</span> stash drop <span class="token punctuation">[</span>stash@<span class="token punctuation">{</span>某一个序号<span class="token punctuation">}</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token comment"># 恢复某一个暂存并删掉它，默认恢复 stash@{0}</span></span>
<span class="line"><span class="token function">git</span> stash pop <span class="token punctuation">[</span>stash@<span class="token punctuation">{</span>某一个序号<span class="token punctuation">}</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token comment"># 同上恢复，但是不删掉它</span></span>
<span class="line"><span class="token function">git</span> stash apply <span class="token punctuation">[</span>stash@<span class="token punctuation">{</span>某一个序号<span class="token punctuation">}</span><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><p><code>clone</code></p><p>git clone 加 --single-branch 是下载单个分支， --depth=1 是下载单个 commit 这俩配置项可以提高拉取代码的速度</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"> <span class="token function">git</span> clone <span class="token parameter variable">--depth</span><span class="token operator">=</span><span class="token number">1</span> --single-branch <span class="token function">git</span> @github.com:ant-design/ant-design.git</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><p><code>设置命令别名</code></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># git lg</span></span>
<span class="line"><span class="token function">git</span> config <span class="token parameter variable">--global</span> alias.lg <span class="token string">&quot;log --color --graph --pretty=format:&#39;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#39; --abbrev-commit&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><h3 id="报错" tabindex="-1"><a class="header-anchor" href="#报错"><span>报错</span></a></h3><p><code>LF will be replaced by CRLF the next time Git touches it</code></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">git</span> config <span class="token parameter variable">--global</span> core.autocrlf <span class="token boolean">false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div>`,23))])}const v=c(u,[["render",h]]),k=JSON.parse(`{"path":"/general/tool/local/","title":"本地配置","lang":"zh-CN","frontmatter":{"title":"本地配置"},"git":{"updatedTime":1748429261000,"contributors":[{"name":"zhouling","username":"zhouling","email":"1309515883@qq.com","commits":1,"url":"https://github.com/zhouling"},{"name":"carla","username":"carla","email":"1309515883@qq.com","commits":2,"url":"https://github.com/carla"}],"changelog":[{"hash":"fdb955de575dba57882c7a314705b5e7283439d1","time":1748429261000,"email":"1309515883@qq.com","author":"carla","message":"增加cmd"},{"hash":"2a4a2c4708db6e5672937f0371273a202e76281f","time":1745119465000,"email":"1309515883@qq.com","author":"carla","message":"'记录本地工具'"},{"hash":"be37001d9accbe207f08c7011e25fcec418b3cb6","time":1693643793000,"email":"1309515883@qq.com","author":"zhouling","message":"git命令和报错记录"}]},"filePathRelative":"general/tool/local/index.md"}`);export{v as comp,k as data};
